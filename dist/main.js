!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=265)}({262:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=i(93);var s=new((n=o)&&n.__esModule?n:{default:n}).default("div","homeContent");s.style("width","100vw").style("height","100vh").style("background","#222f3e").style("position","relative").style("transition","5s").style("overflow","hidden").on("mousemove",function(e,t){var i=e.clientX,n=e.clientY,o=window.innerWidth/2,a=window.innerHeight/2;s.dx=-(i-o)/10,s.dy=-(n-a)/10});AXR.append("backgroundAn").attr("freq",200).attr("executionTimes",1).attr("action",function(){s.style("background","black")}).insert();var a=s.append("h1","headLine").content("FRONT END ENGINEER").style("position","fixed").style("color","white").style("width","100%").style("height","60px").style("text-align","center").style("left","0").style("right","0").style("bottom","33%").style("margin","auto").style("font-size","64px").style("transition","1s").style("text-shadow","0 0 10px #70a1ff").style("z-index",1).on("mouseover",function(){this.style("text-shadow","0 0 30px #eccc68")}).on("mouseleave",function(){this.style("text-shadow","0 0 10px #70a1ff")}),r=(AXR.append("home_headLine_animation").attr("freq",25).attr("action",function(){100*Math.random()>50?a.style("text-shadow","0 0 30px #eccc68"):a.style("text-shadow","0 0 10px #70a1ff")}).insert(),s.append("h1","subHeadLine").content("- who makes data alive -").style("position","fixed").style("color","#eccc68").style("width","100%").style("height","30px").style("text-align","center").style("left","0").style("right","0").style("bottom","30%").style("margin","auto").style("font-size","32px").style("transition","1s").style("text-shadow","0 0 10px #eccc68").style("z-index",1),s.append("span","infoButtonHalo").style("position","fixed").style("color","#eccc68").style("width","32px").style("height","32px").style("overflow","hidden").style("border-radius","50%").style("text-align","center").style("left","0").style("right","0").style("bottom","18%").style("margin","auto").style("font-size","24px").style("transition","0.5s").style("border","1px solid #eccc68").style("box-shadow","0 0 30px #eccc68").style("cursor","pointer").style("z-index",1)),l=s.append("span","infoButton").content("Wanna know more?").style("position","fixed").style("color","#eccc68").style("width","32px").style("height","32px").style("overflow","hidden").style("border","1px solid transparent").style("border-radius","50%").style("text-align","center").style("left","0").style("right","0").style("bottom","18%").style("margin","auto").style("font-size","24px").style("transition","0.5s").style("background","#eccc68").style("text-shadow","0 0 5px #eccc68").style("box-shadow","0 0 10x #eccc68").style("cursor","pointer").style("z-index",1).on("mouseover",function(){this.style("background","rgba(34, 47, 62,0.5)").style("width","100%").style("box-shadow","").style("border-radius","4px"),l.overed=!0}).on("mouseleave",function(){this.style("background","#eccc68").style("width","32px").style("box-shadow","0 0 10px #eccc68").style("border-radius","50%"),l.overed=!1});AXR.append("infoButtonHaloAn").attr("freq",60).attr("action",function(){switch(!0===l.overed&&(r.state=0),r.state){case void 0:case 0:r.state=1,r.style("width","64px").style("bottom","calc(18% - 15px)").style("height","64px").style("opacity",0);break;case 1:r.state=2,r.style("width","32px").style("bottom","18%").style("height","32px");break;case 2:r.state=0,r.style("opacity",1)}}).insert();window.mobilecheck=function(){var e,t=!1;return e=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),t};for(var c=mobilecheck()?20:150,u=function(){var e=Math.random()*window.innerWidth+10,t=Math.random()*window.innerHeight+10,i=s.append("div").style("position","absolute").style("width","20px").style("height","20px").style("border-radius","50%").style("background","#eccc68").style("transition","0.1s linear").style("box-shadow","0 0 10px #eccc68").style("opacity","0").style("transform","translate("+e+"px,"+t+"px)").on("mouseover",function(){this.style("background","rgba(255, 165, 2,1.0)")}).on("mouseleave",function(){this.style("background","#eccc68")});i.x=e,i.y=t,i.dx=Math.random()-.5,i.dy=Math.random()-.5,i.ds=.01,i.scale=Math.random(),i.counter=10;AXR.append("home_circle_animation").attr("freq",5).attr("action",function(){var e=i.scale;i.x+=i.dx,i.y+=i.dy,i.style("transform","translate("+(i.x+(s.dx||0)*e)+"px,"+(i.y+(s.dy||0)*e)+"px) scale("+e+")").style("opacity",e).style("box-shadow","0 0 "+(10*Math.random()+10)+"px #eccc68"),i.x>window.innerWidth?i.dx=-(.5*Math.random()+.1):i.x<0&&(i.dx=.5*Math.random()+.1),i.y>window.innerHeight?i.dy=-(.5*Math.random()+.1):i.y<0&&(i.dy=.5*Math.random()+.1),i.counter--,i.counter<=0&&(i.counter=10,i.scale+=i.ds,i.scale>=1&&(i.ds=-.01),i.scale<=0&&(i.ds=.01))}).insert()},d=0;d<c;d++)u();t.default=s},263:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}();function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var s=100,a=function(){function e(t,i){o(this,e),this.tickSpeed=t||1;var n=i||{};this.init(n),this.MAX_CYCLE=s}return n(e,[{key:"init",value:function(e){window.AXR=this,this.cycle=0,this.routineList=[],this.longestRoutineTime=0,setTimeout(this.start.bind(this))}},{key:"start",value:function(){this.cycleStartTime=Date.now(),setTimeout(this.routine.bind(this),this.tickSpeed)}},{key:"append",value:function(e,t){var i=new r(e,t),n=this;return i.insert=function(){return 1!==i.freq&&(i.counter+=n.routineList.length+1),i.idx=n.routineList.length,n.routineList.push(i),i},i.remove=function(){n.routineList.splice(i.idx,1)},i}},{key:"getCurrentCycle",value:function(){return this.cycle}},{key:"routine",value:function(){for(var e=this.routineList,t=this,i=function(){var i=e[n],o=Date.now();try{i.checkCounter()&&setTimeout(function(){i.action(),t.lastRoutineTime=Date.now()-o,t.longestRoutineTime<t.lastRoutineTime&&(t.longestRoutineTime=t.lastRoutineTime),t.lastRoutineTime>200&&console.warn("Routine:"+i.name+" took too long to run. ["+t.lastRoutineTime+"ms]"),i.isRunning=!1},1)}catch(e){}},n=0;n<e.length;n++)i();this.cycle++,this.cycle===s&&(this.cycle=0,this.lastCycleTime=Date.now()-this.cycleStartTime,this.cyclePerSec=Math.floor(1e3/this.lastCycleTime)),this.start()}}]),e}(),r=function(){function e(t,i){o(this,e),this.name=t,this.group=i||"common",this.freq=1,this.action=function(){},this.repeat=0}return n(e,[{key:"attr",value:function(e,t){return this[e]=t,"freq"===e&&(this.counter=t),this}},{key:"resetCounter",value:function(){this.counter=this.freq}},{key:"checkCounter",value:function(){if(!0===this.isRunning)return!1;var e=0==--this.counter;return 0===this.counter&&(void 0!==this.executionTimes&&(this.executionTimes--,0===this.executionTimes&&this.remove()),this.isRunning=!0,this.resetCounter()),e}}]),e}(),l=new a;window.AXR=l,t.default=l},264:function(e,t,i){"use strict";var n=r(i(94)),o=r(i(93)),s=r(i(263)),a=r(i(262));function r(e){return e&&e.__esModule?e:{default:e}}new n.default,window.addEventListener("click",function(e){y.updater("closeMenu")()});var l=new o.default("div","ax_root",document.getElementById("app"));l.style("font-size","12px").style("cursor","url(), auto");var c=l.append("div","header").attr("onselectstart","return false;").style("display","flex").style("position","absolute").style("opacity","0.5").style("top","1em").style("height","3em").style("z-index","10").style("transition","0.3s").on("mouseover",function(){this.style("opacity","1")}).on("mouseleave",function(){this.style("opacity","0.5")}),u=["Menu","Playground","About"],d=0;u.forEach(function(e){u[d++]=c.append("div","header_"+e).content(e).appendClass("xx").style("color","white").style("padding","1em 0.5em").style("cursor","pointer").style("text-shadow","0 0 10px #eccc68").style("transition","0.3s").on("mouseover",function(){this.style("text-shadow","0 0 10px #eccc68").style("color","#eccc68")}).on("mouseleave",function(){this.style("text-shadow","0 0 20px #eccc68").style("color","white")})});var h=u[0];h.style("position","relative");var y=h.append("div","menuContainer").style("position","absolute").style("width","256px").style("height","0px").style("background","").style("top","125%").style("left","0").style("box-shadow","0px 0px 5px rgba(112, 161, 255,0)").style("border","1px solid rgba(112, 161, 255, 0)").style("transition","0.3s").setUpdater("toggleMenu",function(e){var t=this.hasOpen||!1;t?this.style("height","0").style("box-shadow","0px 0px 5px rgba(112, 161, 255,0)").style("border","1px solid rgba(112, 161, 255, 0)"):this.style("height","33vh").style("box-shadow","0px 0px 5px rgba(112, 161, 255,1.0)").style("border","1px solid rgba(112, 161, 255, 0.5)"),this.hasOpen=!t}).setUpdater("closeMenu",function(e){this.style("height","0").style("box-shadow","0px 0px 5px rgba(112, 161, 255,0)").style("border","1px solid rgba(112, 161, 255, 0)"),this.hasOpen=!1});h.on("click",function(e){e.stopPropagation(),y.updater("toggleMenu")()}),l.append("div","mainContainer").appendElement(a.default);var p=l.append("p","version").style("position","fixed").style("bottom","0px").style("right","0").style("padding-right","1em").style("color","lightgray").content(new Date).setUpdater("timer",function(){this.content("AX_Routine: LasrCycleTime: "+s.default.lastCycleTime+"ms | CPS:"+s.default.cyclePerSec+" |Longest: "+s.default.longestRoutineTime+"ms | Last:"+s.default.lastRoutineTime+"ms")});s.default.append("timer").attr("freq",1).attr("action",p.updater("timer")).insert()},265:function(e,t,i){e.exports=i(264)},93:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),s=i(94);(n=s)&&n.__esModule;var a=function(){function e(t,i,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.id=this.readValue(i)||"self",this.tag=this.readValue(t)||"div",this.dom=document.createElement(this.tag),this.dom.setAttribute("id",this.id),this.childrenList=[],this.attribute={},this.domStyle={},this.updaters={},n&&n.appendChild(this.dom);var o=this;this.updater=function(e){var t=this.updaters[e];return function(){t&&t.call(o,o.data,arguments)}}}return o(e,[{key:"setUpdater",value:function(e,t){return this.updaters[e]=t,this}},{key:"bind",value:function(e){return this.data=e,this}},{key:"append",value:function(t,i){var n=new e(this.readValue(t),this.readValue(i));return this.appendElement(n),n}},{key:"appendElement",value:function(e){var t=this.readValue(e);return this.childrenList.push(t),this.dom.appendChild(t.dom),t}},{key:"attr",value:function(e,t){var i=this.readValue(t);return this.attribute[e]=i,this.dom.setAttribute(e,i),this}},{key:"on",value:function(e,t){var i=t,n=this;return this.on[e]=i,this.dom.addEventListener(e,function(e){i.call(n,e,n.data)}),this}},{key:"style",value:function(e,t){var i=this.readValue(e),n=this.readValue(t);return this.domStyle[i]=n,this.dom.style[i]=n,this}},{key:"content",value:function(e){var t=this.readValue(e);return this.innerHTML=t,this.dom.innerHTML=t,this}},{key:"appendClass",value:function(e){var t=this.readValue(e),i=this.classes||[];return i.push(t),this.dom.classList.add(t),this.classes=i,this}},{key:"select",value:function(e){var t=e.charAt(0),i=e.substring(1);switch(t){case"#":return this.selectById(i);case".":return this.selectByClassName(i);default:return this.selectByTag(e)}}},{key:"selectById",value:function(e){for(var t=this.childrenList,i=void 0,n=0;n<t.length;n++){var o=t[n];if(o.id===e){i=o;break}}return i}},{key:"selectByClassName",value:function(e){for(var t=this.childrenList,i=[],n=0;n<t.length;n++){var o=t[n];o.classes.indexOf(e)>-1&&i.push(o)}return i}},{key:"selectByTag",value:function(e){for(var t=this.childrenList,i=[],n=0;n<t.length;n++){var o=t[n];o.tag===e&&i.push(o)}return i}},{key:"remove",value:function(e){if(void 0!=e){var t=e.charAt(0),i=e.substring(1);switch(t){case"#":this.removeById(i);break;case".":this.removeByClassName(i);break;default:this.removeByTag(e)}}else this.removeSelf()}},{key:"removeById",value:function(e){for(var t=this.childrenList,i=0;i<t.length;i++){var n=t[i];if(n.id===e){t.splice(i,1),n.remove(),i--;break}}}},{key:"removeByClassName",value:function(e){for(var t=this.childrenList,i=0;i<t.length;i++){var n=t[i];n.classes.indexOf(e)>-1&&(t.splice(i,1),n.remove(),i--)}}},{key:"removeByTag",value:function(e){for(var t=this.childrenList,i=0;i<t.length;i++){var n=t[i];n.tag===e&&(t.splice(i,1),n.remove(),i--)}}},{key:"removeSelf",value:function(){for(var e in this.childrenList.forEach(function(e){e.remove()}),this.dom.remove(),this)delete this[e]}},{key:"readValue",value:function(e){var t=e;return"function"==typeof t?t.call(this,this.data):t}}]),e}();t.default=a},94:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}();var o=function(){},s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var i=i||{};this.init(i)}return n(e,[{key:"init",value:function(e){var t=e||{};this.debugMode=t.debug||!1,this.dataMap={},this.actionMap={},this.browser=this.getBrowser(),window.ax=this}},{key:"getBrowser",value:function(){var e=!1;return window.opr&&opr.addons||window.opera||navigator.userAgent.indexOf(" OPR/")>=0?"opera":"undefined"!=typeof InstallTrigger?"firefox":/constructor/i.test(window.HTMLElement)||"[object SafariRemoteNotification]"===(!window.safari||safari.pushNotification).toString()?"safari":document.documentMode?(Object.assign=function(){for(var e=arguments[0],t=1;t<arguments.length;t++)for(var i in arguments[t]){var n=arguments[t];n.hasOwnProperty(i)&&(e[i]=n[i])}return e},e=!0,"ie"):!e&&window.StyleMedia?"edge":window.chrome&&window.chrome.webstore?"chrome":(isChrome||isOpera)&&window.CSS?"blink":void 0}},{key:"storeDataArray",value:function(e,t,i,n,s){var a=t||"id",r=s||o,l=[],c=i||o;return(e||[]).forEach(function(e){var t=e[a];if(void 0!==t){var i=self.storeValue(t,e,n);c(i),l.push(i)}}),r(e,l),l}},{key:"storeValue",value:function(e,t,i,n){var s=i||{},a=this.dataMap,r=e,l=n||o,c=t,u=a[r]||{};return u=u===Object(u)&&!0!==s.overwrite?Object.assign(u,c):c,this.dataMap[r]=u,l(u),this.react(r),u}},{key:"getValue",value:function(e){var t=e||"";return self.dataMap[t]}},{key:"connect",value:function(e,t){if(void 0===e||void 0===t)return!1;var i=this.actionMap,n=i[e]||[];n.push(t),i[e]=n}},{key:"react",value:function(e){if(void 0===e)return!1;var t=this.actionMap[e]||[];t.forEach(function(i){try{i(self.getValue(e))}catch(e){var n=t.indexOf(i);t.splice(n,1)}})}},{key:"debug",value:function(e){this.debugMode&&console.log("DEBUG: "+e)}}]),e}();t.default=s}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,